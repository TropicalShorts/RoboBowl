// Arduino Mega: Sends PWM signal with 4 distinct duty cycles

int pwmPin = 9;  // PWM pin
int signalState = 0;  // State to switch between 4 PWM distinctions
unsigned long previousMillis = 0;
const long interval = 2000;  // Change PWM every 2 seconds

void setup() {
  pinMode(pwmPin, OUTPUT);
  Serial.begin(9600);
  Serial.println("Check A");
}

void loop() {
  unsigned long currentMillis = millis();
  //Serial.println("Check B");
  // Change PWM signal every interval
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    
    // Cycle through the 4 distinct PWM signals
    switch (signalState) {
      case 0:
        analogWrite(pwmPin, 64);  // 25% duty cycle
        Serial.println("25 percent");
        break;
      case 1:
        analogWrite(pwmPin, 128);  // 50% duty cycle
          Serial.println("50 percent");
        break;
      case 2:
        analogWrite(pwmPin, 192);  // 75% duty cycle
        Serial.println("75 percent");
        break;
      case 3:
        analogWrite(pwmPin, 255);  // 100% duty cycle
        Serial.println("100 percent");
        break;
    }

    // Update the signalState to the next distinction
    signalState = (signalState + 1) % 4;
  }
}
